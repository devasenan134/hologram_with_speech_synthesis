{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"first-order-model","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyOSRGTHri0bsSk1dt6Dxa3D"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU"},"cells":[{"cell_type":"markdown","source":["# DeepFake using first-order-motion-model"],"metadata":{"id":"2zXnvqSzLFrY"}},{"cell_type":"markdown","source":["**Clone repository**"],"metadata":{"id":"tslB_5q8LCeW"}},{"cell_type":"code","execution_count":1,"metadata":{"id":"SAlNyCpVKuh8","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1646405055341,"user_tz":-330,"elapsed":8212,"user":{"displayName":"Devasenan Murugan","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiPxQpK2EVaFWOJjdfikK2MNWjKAFthQ12nw-bW_uQ=s64","userId":"15686758824548239314"}},"outputId":"b9ca5a2d-20b3-4c72-873c-d925e712a830"},"outputs":[{"output_type":"stream","name":"stdout","text":["Cloning into 'first-order-model'...\n","remote: Enumerating objects: 344, done.\u001b[K\n","remote: Counting objects: 100% (51/51), done.\u001b[K\n","remote: Compressing objects: 100% (36/36), done.\u001b[K\n","remote: Total 344 (delta 22), reused 43 (delta 14), pack-reused 293\u001b[K\n","Receiving objects: 100% (344/344), 78.45 MiB | 13.72 MiB/s, done.\n","Resolving deltas: 100% (173/173), done.\n"]}],"source":["!git clone https://github.com/devasenan134/first-order-model"]},{"cell_type":"code","source":["cd first-order-model"],"metadata":{"id":"C3uoPInNK1Hc","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1646405055343,"user_tz":-330,"elapsed":19,"user":{"displayName":"Devasenan Murugan","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiPxQpK2EVaFWOJjdfikK2MNWjKAFthQ12nw-bW_uQ=s64","userId":"15686758824548239314"}},"outputId":"9654ea57-8761-462d-bef6-f59864683051"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["/content/first-order-model\n"]}]},{"cell_type":"markdown","source":["**Mount your Google drive folder on Colab**"],"metadata":{"id":"dgrnEd4kLZ3C"}},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount(\"/content/gdrive\")"],"metadata":{"id":"D-mRlO5NNOeX","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1646405174381,"user_tz":-330,"elapsed":119052,"user":{"displayName":"Devasenan Murugan","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiPxQpK2EVaFWOJjdfikK2MNWjKAFthQ12nw-bW_uQ=s64","userId":"15686758824548239314"}},"outputId":"d1f24f49-6244-4d5f-8b7a-2f69dee4f4d5"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/gdrive\n"]}]},{"cell_type":"markdown","source":["**Add folder https://drive.google.com/drive/folders/19CEDADQyeNayTNDp-eZ4EDDb0l3XhQmP to your google drive**"],"metadata":{"id":"M4mkiryFNZnw"}},{"cell_type":"markdown","source":["**Load driving video and source image**"],"metadata":{"id":"aXHkfXsQNmjv"}},{"cell_type":"code","source":["import imageio\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import matplotlib.animation as animation\n","from skimage.transform import resize\n","from IPython.display import HTML\n","import warnings\n","\n","warnings.filterwarnings(\"ignore\")\n","\n","\n","source_image = imageio.imread(\"/content/gdrive/MyDrive/ColabNotebooks/ML/hologram_with_speech_synthesis/first-order-motion-model/data/appa.jpg\")\n","reader = imageio.get_reader(\"/content/gdrive/MyDrive/ColabNotebooks/ML/hologram_with_speech_synthesis/first-order-motion-model/data/vid_in/driving.avi\")\n","# driving_video = imageio.mimread('/content/gdrive/MyDrive/ColabNotebooks/ML/first-order-motion-model/data/obama_speech.mp4')\n","\n","fps = reader.get_meta_data()['fps']\n","driving_video = []\n","try:\n","    for im in reader:\n","        driving_video.append(im)\n","except RuntimeError:\n","    pass\n","reader.close()\n","\n","#Resize image and video to 256x256\n","source_image = resize(source_image, (256, 256))[..., :3]\n","driving_video = [resize(frame, (256, 256))[..., :3] for frame in driving_video]\n","\n","\n","def display(source, driving, generated=None):\n","    fig = plt.figure(figsize=(8 + 4 * (generated is not None), 6))\n","\n","    ims = []\n","    for i in range(len(driving)):\n","        cols = [source]\n","        cols.append(driving[i])\n","        if generated is not None:\n","            cols.append(generated[i])\n","        im = plt.imshow(np.concatenate(cols, axis=1), animated=True)\n","        plt.axis('off')\n","        ims.append([im])\n","\n","    ani = animation.ArtistAnimation(fig, ims, interval=50, repeat_delay=1000)\n","    plt.close()\n","    return ani\n","\n","\n","HTML(display(source_image, driving_video).to_html5_video())\n"],"metadata":{"id":"W6AxKf5RNl7B","colab":{"base_uri":"https://localhost:8080/","height":380},"executionInfo":{"status":"error","timestamp":1646406474543,"user_tz":-330,"elapsed":670,"user":{"displayName":"Devasenan Murugan","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiPxQpK2EVaFWOJjdfikK2MNWjKAFthQ12nw-bW_uQ=s64","userId":"15686758824548239314"}},"outputId":"a292aa8d-d4ca-4434-ad33-83b8e521a792"},"execution_count":11,"outputs":[{"output_type":"error","ename":"FileNotFoundError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-11-7f4d5adb0d7d>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     11\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     12\u001b[0m \u001b[0msource_image\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mimageio\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mimread\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"/content/gdrive/MyDrive/ColabNotebooks/ML/hologram_with_speech_synthesis/first-order-motion-model/data/appa.jpg\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 13\u001b[0;31m \u001b[0mreader\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mimageio\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_reader\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"/content/gdrive/MyDrive/ColabNotebooks/ML/hologram_with_speech_synthesis/first-order-motion-model/data/vid_in/driving.avi\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     14\u001b[0m \u001b[0;31m# driving_video = imageio.mimread('/content/gdrive/MyDrive/ColabNotebooks/ML/first-order-motion-model/data/obama_speech.mp4')\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     15\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/imageio/core/functions.py\u001b[0m in \u001b[0;36mget_reader\u001b[0;34m(uri, format, mode, **kwargs)\u001b[0m\n\u001b[1;32m    128\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    129\u001b[0m     \u001b[0;31m# Create request object\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 130\u001b[0;31m     \u001b[0mrequest\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mRequest\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0muri\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"r\"\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mmode\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    131\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    132\u001b[0m     \u001b[0;31m# Get format\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/imageio/core/request.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, uri, mode, **kwargs)\u001b[0m\n\u001b[1;32m    123\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    124\u001b[0m         \u001b[0;31m# Parse what was given\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 125\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_parse_uri\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0muri\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    126\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    127\u001b[0m         \u001b[0;31m# Set extension\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/imageio/core/request.py\u001b[0m in \u001b[0;36m_parse_uri\u001b[0;34m(self, uri)\u001b[0m\n\u001b[1;32m    271\u001b[0m                 \u001b[0;31m# Reading: check that the file exists (but is allowed a dir)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    272\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mos\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpath\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexists\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfn\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 273\u001b[0;31m                     \u001b[0;32mraise\u001b[0m \u001b[0mFileNotFoundError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"No such file: '%s'\"\u001b[0m \u001b[0;34m%\u001b[0m \u001b[0mfn\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    274\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    275\u001b[0m                 \u001b[0;31m# Writing: check that the directory to write to does exist\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mFileNotFoundError\u001b[0m: No such file: '/content/gdrive/MyDrive/ColabNotebooks/ML/hologram_with_speech_synthesis/first-order-motion-model/data/vid_in/driving.avi'"]}]},{"cell_type":"markdown","source":["**Create a model and load checkpoints**"],"metadata":{"id":"b1r-ZW89R5f_"}},{"cell_type":"code","source":["pwd"],"metadata":{"id":"EQOxLoq4s2jI","colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"status":"ok","timestamp":1646405209159,"user_tz":-330,"elapsed":33,"user":{"displayName":"Devasenan Murugan","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiPxQpK2EVaFWOJjdfikK2MNWjKAFthQ12nw-bW_uQ=s64","userId":"15686758824548239314"}},"outputId":"1f6390bf-5459-4669-ee79-32a82ffc6aa4"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'/content/first-order-model'"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["from IPython.display import HTML\n","from demo import load_checkpoints\n","generator, kp_detector = load_checkpoints(config_path='config/vox-256.yaml', \n","                            checkpoint_path='/content/gdrive/MyDrive/ColabNotebooks/ML/hologram_with_speech_synthesis/first-order-motion-model/data/vox-cpk.pth.tar')"],"metadata":{"id":"g_A2y5aoSCIN","executionInfo":{"status":"ok","timestamp":1646405233892,"user_tz":-330,"elapsed":24761,"user":{"displayName":"Devasenan Murugan","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiPxQpK2EVaFWOJjdfikK2MNWjKAFthQ12nw-bW_uQ=s64","userId":"15686758824548239314"}}},"execution_count":6,"outputs":[]},{"cell_type":"markdown","source":["**Perform image animation**"],"metadata":{"id":"3V1r3L-nSLIH"}},{"cell_type":"code","source":["import imageio\n","from demo import make_animation\n","from skimage import img_as_ubyte\n","from IPython.display import HTML\n","\n","predictions = make_animation(source_image, driving_video, generator, kp_detector, relative=True)\n","# predictions = make_animation(source_image, driving_video, generator, kp_detector, relative=False, adapt_movement_scale=True)\n","\n","\n","# save resulting video\n","imageio.mimsave('../gdrive/MyDrive/ColabNotebooks/ML/hologram_with_speech_synthesis/first-order-motion-model/data/faked_out/generated.mp4', [img_as_ubyte(frame) for frame in predictions], fps=fps)\n","#video can be downloaded from /content folder\n","\n","HTML(display(source_image, driving_video, predictions).to_html5_video())"],"metadata":{"id":"JMsMiXtqSKuu","colab":{"base_uri":"https://localhost:8080/"},"outputId":"eac7eb63-db09-44e3-b6d8-72fde7c41871"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["100%|██████████| 444/444 [01:23<00:00,  5.33it/s]\n"]}]}]}